debug=true

spring.thymeleaf.cache=false

spring.security.oauth2.client.registration.todo-api.client-id=todo-client
spring.security.oauth2.client.registration.todo-api.client-secret=1d5e207d-84e9-4047-9d70-b8b4365b6d4c

# spring.security.oauth2.client.registration.todo-api.client-name=keycloak client example
# spring.security.oauth2.client.registration.todo-api.provider=todo-api
# spring.security.oauth2.client.registration.todo-api.scope=openid
# spring.security.oauth2.client.registration.todo-api.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
# spring.security.oauth2.client.registration.todo-api.client-authentication-method=basic
# spring.security.oauth2.client.registration.todo-api.authorization-grant-type=authorization_code



issuer.uri=http://192.168.11.100:9000/auth/realms/todo-api
auth-server.uri=${issuer.uri}/protocol/openid-connect
resource-server.base-uri=http://192.168.11.100:8081/


# spring.security.oauth2.client.provider.todo-api.authorization-uri: ${auth-server.uri}/auth
# spring.security.oauth2.client.provider.todo-api.token-uri: ${auth-server.uri}/token
# spring.security.oauth2.client.provider.todo-api.user-info-uri: ${auth-server.uri}/userinfo
# spring.security.oauth2.client.provider.todo-api.user-info-authentication-method: basic
# spring.security.oauth2.client.provider.todo-api.user-name-attribute: preferred_username
# spring.security.oauth2.client.provider.todo-api.jwk-set-uri: ${auth-server.uri}/certs
spring.security.oauth2.client.provider.todo-api.issuer-uri=${issuer.uri}


